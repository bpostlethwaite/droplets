{"ts":1340910347741,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*jshint asi: true*/\n/*jshint laxcomma: true*/\n\"use strict\";\n\njQuery(document).ready(function($) {\n  var socket = io.connect(\"http://droplets.benjp.c9.io\")\n  //  var socket = io.connect(\"wss://droplets.jit.su\")\n  //var socket = io.connect(\"http://192.168.1.113:8081\")\n    , colorgrad = [\n        \"#000092\"\n      , \"#00009E\"\n      , \"#0000AA\"\n      , \"#0000B6\"\n      , \"#0000C2\"\n      , \"#0000CE\"\n      , \"#0000DB\"\n      , \"#0000E7\"\n      , \"#0000F3\"\n      , \"#0000FF\"\n      , \"#000CFF\"\n      , \"#0018FF\"\n      , \"#0024FF\"\n      , \"#0031FF\"\n      , \"#003DFF\"\n      , \"#0049FF\"\n      , \"#0055FF\"\n      , \"#0061FF\"\n      , \"#006DFF\"\n      , \"#0079FF\"\n      , \"#0086FF\"\n      , \"#0092FF\"\n      , \"#009EFF\"\n      , \"#00AAFF\"\n      , \"#00B6FF\"\n      , \"#00C2FF\"\n      , \"#00CEFF\"\n      , \"#00DBFF\"\n      , \"#00E7FF\"\n      , \"#00F3FF\"\n      , \"#00FFFF\"\n      , \"#0CFFF3\"\n      , \"#18FFE7\"\n      , \"#24FFDB\"\n      , \"#31FFCE\"\n      , \"#3DFFC2\"\n      , \"#49FFB6\"\n      , \"#55FFAA\"\n      , \"#61FF9E\"\n      , \"#6DFF92\"\n      , \"#79FF86\"\n      , \"#86FF79\"\n      , \"#92FF6D\"\n      , \"#9EFF61\"\n      , \"#AAFF55\"\n      , \"#B6FF49\"\n      , \"#C2FF3D\"\n      , \"#CEFF31\"\n      , \"#DBFF24\"\n      , \"#E7FF18\"\n      , \"#F3FF0C\"\n      , \"#FFFF00\"\n      , \"#FFF300\"\n      , \"#FFE700\"\n      , \"#FFDB00\"\n      , \"#FFCE00\"\n      , \"#FFC200\"\n      , \"#FFB600\"\n      , \"#FFAA00\"\n      , \"#FF9E00\"\n      , \"#FF9200\"\n      , \"#FF8600\"\n      , \"#FF7900\"\n      , \"#FF6D00\"\n      , \"#FF6100\"\n      , \"#FF5500\"\n      , \"#FF4900\"\n      , \"#FF3D00\"\n      , \"#FF3100\"\n      , \"#FF2400\"\n      , \"#FF1800\"\n      , \"#FF0C00\"\n      , \"#FF0000\"\n      , \"#F30000\"\n      , \"#E70000\"\n      , \"#DB0000\"\n      , \"#CE0000\"\n      , \"#C20000\"\n      , \"#B60000\"\n      , \"#AA0000\"\n      , \"#9E0000\"\n      ]\n  , field = fieldgen()\n  , canvas = document.getElementById('canvas')\n  , c = canvas.getContext('2d')\n  , xlen = 10\n  , ylen = 10\n  , rows\n  , cols\n  , xpix\n  , ypix\n  , cfg = {}\n\n// ON RESIZE ///////////////////////////////////////\n  $(window).resize(function(e) {\n    rows = Math.floor(window.innerHeight / xlen)\n    cols = Math.floor(window.innerWidth / ylen)\n    field.setResolution(rows, cols)\n    canvas.width  = window.innerWidth\n    canvas.height = window.innerHeight\n    cfg.s = buildSprites(10)\n  })\n\n// This turns on and off button selected class for animations\n  $(\".category\").click(function() {\n    //turn of all previously selected\n    $('.selected').not(this).removeClass('selected')\n    // Toggle this buttons class.\n    $(this).toggleClass('selected')\n    // If it wasn't previously selected then continue and engage.\n    if ( $(this).hasClass('selected') ) {\n      //find matching classes associated w/ ID\n      $(\".\"+ $(this).attr('id') ).addClass('selected')\n    }\n  }) // end click\n\n// CONTENT SOCKETS /////////////////////////////////////////////////\n  socket.on('readme', function(data) {\n    $('.content.tog3').html(data)\n  })\n\n// MODE FUNCTIONS ///////////////////////////////////////////////////\n\n  function waveEqnMode() {\n    $(window).trigger('resize')\n    var colorgrada = buildColorGrad(\"#000092\", 41, -1).reverse()\n      , colorgradb = buildColorGrad(\"#000092\", 41, 1)\n    colorgradb.shift()\n\n    cfg.mag = 15\n    // Bind Click //////////////////////////////////////////\n    $(canvas).unbind() // get rid of previous bindings\n    canvas.addEventListener(\"click\",function(evt) {\n        var xp = evt.pageX\n          , yp = evt.pageY\n      socket.emit('clientDroplet',{\n          x: xp / window.innerWidth // turn into percentage\n        , y: yp / window.innerHeight // before sending\n        })\n      field.addDroplet( (yp / ylen) | 0 , (xp / xlen) | 0 , cfg.mag)\n    })\n    // Set render configurations\n    cfg.update = field.waveUpdate\n    cfg.scale = 10\n    cfg.maxval = 40 // +/-\n    cfg.adj = 40\n    cfg.cg = colorgrada.concat(colorgradb)\n    // Start Animation\n    setInterval(renderField, 50)\n\n    } // END WAVEEQNMODE\n\n\n  function diffusionEqnMode() {\n    $(window).trigger('resize')\n    cfg.mag = 30\n    xpix = 0.5*Math.round(window.innerWidth)\n    ypix= 0.5*Math.round(window.innerHeight)\n    // Click Binding //////////////////////////////////////////\n    $(canvas).unbind()\n    $(canvas).mousemove(function(e){\n      xpix = e.pageY\n      ypix = e.pageX\n    })\n\n    setInterval(tracedrops, 50)\n\n    function tracedrops() {\n      field.addDroplet( (ypix / ylen) | 0 , (xpix / xlen) | 0 , cfg.mag)\n      socket.emit('clientDroplet', {\n          x: xpix / window.innerWidth\n        , y: ypix / window.innerHeight\n      })\n\n    }\n\n    // Set render configurations\n    cfg.update = field.diffusionUpdate\n    cfg.scale = 10\n    cfg.maxval = 80\n    cfg.adj = 0\n    cfg.cg = colorgrad\n\n\n    // Start Animation\n    setInterval(renderField, 50)\n\n  } // END DIFFUSIONEQMODE\n\n\n  function poissonEqnMode() {\n    $(window).trigger('resize')\n    xpix = 0.5*Math.round(window.innerWidth)\n    ypix= 0.5*Math.round(window.innerHeight)\n    // Click Binding //////////////////////////////////////////\n    $(canvas).unbind() // get rid of previous bindings\n    $(canvas).dblclick(function(evt) {\n        var xpix = evt.pageX\n          , ypix = evt.pageY\n      field.addSource( (ypix / ylen) | 0 , (xpix / xlen) | 0 )\n    })\n\n    $(canvas).mousemove(function(e){\n      xpix = e.pageY // yes this is confusing but I like my x dir up and down = height\n      ypix = e.pageX\n    })\n\n    // Set renderField configurations\n    cfg.update = field.poissonUpdate\n    cfg.scale = 26\n    cfg.maxval = 80\n    cfg.adj = 0\n    cfg.cg = colorgrad\n    // set renderSprites config\n    cfg.m = 3\n    cfg.k = 1\n    cfg.dt = 0.1\n\n    // Start Animation\n    setInterval(renderSprites, 50)\n\n  } // END PoissonEqnMode\n\n// If any event newDroplet, it acts no matter the mode!\n  socket.on('newDroplet', function(d) {\n      var yp = Math.round( d.y * window.innerHeight ) //recover from percentage\n        , xp = Math.round( d.x * window.innerWidth ) // to this user resolution\n      field.addDroplet( (yp / ylen) | 0, (xp / xlen) | 0 , cfg.mag)\n    })\n\n\n  // Draw Canvas /////////////////////////////////////////////////////////////////\n  function renderField () {\n    var row, col, ind\n      , f = cfg.update()\n    for (row = 0; row < rows; ++row) {\n      for (col = 0; col < cols; ++col) {\n        ind = f[row][col] * cfg.scale | 0 // floor if > 0, ceil if < 0\n        if (Math.abs(ind) > cfg.maxval) {\n          ind = cfg.maxval * (ind < 0 ? -1 : 1)\n        }\n        c.fillStyle = cfg.cg[ind += cfg.adj] // start ind at index 0\n        c.fillRect(col*ylen, row*xlen, ylen, xlen)\n      }\n    }\n  }\n\n  function renderSprites () {\n  // Note F = ma & F = qE\n  // so we have field qE = ma and effect of other charges F = kq1q2(r1-r2)/r^2\n  // q1E + k*q1*q2/r^2 = ma\n  // So velocity change due to electric Field and other charges is:\n  // (q1E + k*q1*q2(r2-r1)/r^2)/m = dV/dt\n  // q1/m * (E + k*q2(r2-r1)/r^2) = dV/dt\n  // Where E = -grad(Potential)\n  // or E = -(X[i+1][j] - X[i][j])x -(X[i][j+1] - X[i][j])y\n  // q1 and q1 have been set as 1\n    var i, row, col, Ex, Ey, Fx, Fy, r, vx ,vy\n      , f = cfg.update()\n\n    // FIll OVER PREV SPRITES\n    c.fillStyle = \"#000092\"\n    for (i = 0; i < cfg.s.length; i++) {\n      c.beginPath()\n      c.arc(cfg.s[i].y, cfg.s[i].x, 11,0, Math.PI*2,true)\n      c.fill()\n      c.closePath()\n    }\n\n    c.fillStyle = \"#FFFF87\"\n    for (i = 0; i < cfg.s.length; i++) {\n      // Change position according to velocity\n      cfg.s[i].x = Math.round(cfg.s[i].x + cfg.s[i].vx)\n      cfg.s[i].y = Math.round(cfg.s[i].y + cfg.s[i].vy)\n      if (cfg.s[i].x <= 1 || cfg.s[i].x >= canvas.height -xlen || cfg.s[i].y <= 1 || cfg.s[i].y >= canvas.width - ylen) {\n        cfg.s.splice(i,1)\n        continue\n      }\n      // Draw New Sprite position\n      c.beginPath()\n      c.arc(cfg.s[i].y, cfg.s[i].x, 10,0, Math.PI*2,true)\n      c.fill()\n      c.closePath()\n      // Update velocity\n      row = cfg.s[i].x/xlen | 0\n      col = cfg.s[i].y/ylen | 0\n      // E = -gradPotential\n      Ex = -(f[row + 1][col] - f[row][col])\n      Ey = -(f[row][col + 1] - f[row][col])\n      // Coulumbs law\n      r = Math.sqrt( (cfg.s[i].x - xpix)*(cfg.s[i].x - xpix) + (cfg.s[i].y - ypix)*(cfg.s[i].y - ypix) )\n      Fx = (r > 75) ? 0 : cfg.k*(cfg.s[i].x - xpix) / r\n      Fy = (r > 75) ? 0 : cfg.k*(cfg.s[i].y - ypix) / r\n      vx = (Ex + Fx) / cfg.m\n      vy = (Ey + Fy) / cfg.m\n      cfg.s[i].vx +=  vx/cfg.dt\n      cfg.s[i].vy += vy/cfg.dt\n    }\n\n  }\n\n  function buildSprites (n) {\n    var i, s = []\n    for (i = 0; i < n; i++) {\n      s[i] = {\n          x : 0.5*rows*xlen | 0\n        , y : 0.5 * cols*ylen | 0\n        , vx : Math.random() < 0.5 ? -1 : 1 * Math.random() * 3\n        , vy : Math.random() < 0.5 ? -1 : 1 * Math.random() * 3\n      }\n    }\n    return s\n  }\n\n// SET MODE /////////////////////////////////////////////////////\n  poissonEqnMode()\n  //waveEqnMode()\n}) // end JQuery\n\n\n// HELPER FUNCS //////////////////////////////////////////////////////////\nfunction colorLuminance(hex, lum) {\n  // validate hex string\n  hex = String(hex).replace(/[^0-9a-f]/gi, '')\n  if (hex.length < 6) {\n    hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2]\n  }\n  lum = lum || 0\n  // convert to decimal and change luminosity\n  var rgb = \"#\", c, i\n  for (i = 0; i < 3; i++) {\n    c = parseInt(hex.substr(i*2,2), 16)\n    c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16)\n    rgb += (\"00\"+c).substr(c.length)\n  }\n  return rgb\n}\n\nfunction buildColorGrad(baseShade, numElem, lum) {\n  // Build the gradient variable from a starting darkest shade.\n  // Goes up in lum/numElement increments, where lum\n  // is percent / 100 (1 = 100% increase)\n  var i\n  , nc = []\n  , inc = lum/numElem\n  for (i = 0; i < numElem; ++i) {\n    nc[i] = colorLuminance(baseShade, i*inc)\n  }\n  return nc\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":9748}]],"length":9748}
